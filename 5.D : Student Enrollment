-- D. Student enrollment in courses and books adopted for each course
-- STUDENT (regno: string, name: string, major: string, bdate: date)
-- COURSE (course#:int, cname: string, dept: string)
-- ENROLL(regno:string, course#: int,sem: int,marks: int)
-- BOOK-ADOPTION (course#:int, sem: int, book-ISBN: int)
-- TEXT (book-ISBN: int, book-title: string, publisher: string,author: 
-- string)

CREATE DATABASE COURSES;
USE COURSES;

-- Student Table
CREATE TABLE student(
regno VARCHAR(15) PRIMARY KEY,
name VARCHAR(20),
major VARCHAR(20),
bdate date);

-- course table
CREATE TABLE course(
courseId INT PRIMARY KEY,
cname VARCHAR(20),
dept VARCHAR(20));

-- enroll table
CREATE TABLE enroll(
regno VARCHAR(15),
courseId INT,
sem INT,
marks INT,
FOREIGN KEY (regno) REFERENCES student (regno)ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (courseId) REFERENCES course (courseId)ON DELETE CASCADE ON UPDATE CASCADE);

-- text table
CREATE TABLE text(
bookISBN VARCHAR(15) PRIMARY KEY,
bookTitle VARCHAR(50),
publisher VARCHAR(30),
author VARCHAR(30));

-- bookAdoption
CREATE TABLE bookAdoption(
courseId INT,
sem INT,
bookISBN VARCHAR(15),
FOREIGN KEY (courseId) REFERENCES course (courseId) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (bookISBN) REFERENCES text (bookISBN) ON DELETE CASCADE ON UPDATE CASCADE);

INSERT INTO student
VALUES 
('01JCE21CS007','Advith','CSE','2003-10-02'),
('01JCE21CS105','Avinash','CSE','2003-04-05'),
('01JCE21IS354','Rohan','ECE','2002-12-30'),
('01JCE21ME015','Vishnu','ME','2003-06-22'),
('01JCE21CS032','Harsha','CSE','2003-04-12'),
('01JCE21CS552','Shreyas','ME','2004-07-16'),
('01JCE21IS625','Vinay','ECE','2003-02-04');

SELECT * FROM student;

INSERT INTO course
VALUES 
(510,'RDBMS','CSE'),
(553,'App Developmnt','CSE'),
(512,'Microcontollers','ECE'),
(507,'Rotor Dynamics','ME'),
(509,'Web Development','CSE'),
(515,'Control Systems','ECE'),
(508,'Fluid Kinematics','ME');

SELECT * FROM course;

INSERT INTO enroll
VALUES 
('01JCE21CS007',515,5,88),
('01JCE21CS105',553,5,80),
('01JCE21IS354',510,5,75),
('01JCE21ME015',509,5,93),
('01JCE21CS032',509,5,96),
('01JCE21CS552',512,5,72),
('01JCE21IS625',507,5,88),
('01JCE21CS032',508,5,78),
('01JCE21CS552',507,5,65),
('01JCE21IS625',508,5,91);

SELECT * FROM enroll;

INSERT INTO text
VALUES 
('978-0321992475','Database Systems: The Complete Book','Pearson','Hector GM'),
('978-0133544619','Database Management Systems','Pearson','Raghu R'),
('978-1492042529','iOS 13 Programming for Beginners','O Reilly Media','Ahmad Sahar'),
('978-0128104057','Embedded Systems: Introduction to Microcontrollers',' Elsevier',' Jonathan WV'),
('978-0471352090','Dynamics of Rotating Machines','Wiley','A. A. Shabana'),
('978-1491941597','Learning Web Design: A Beginners Guide','O Reilly Media','Jennifer NR'),
('978-1118554562','Modern Control Engineering','Wiley','Katsuhiko Ogata'),
('978-1107028610','Fundamentals of Fluid Mechanics','Cambridge University Press','Bruce R. Munson'),
('978-0136042594','Artificial Intelligence: A Modern Approach','Pearson','Stuart Russell'),
('978-0134011271','Environment:The Science Behind the Stories','Pearson','Jay H. Withgott');

SELECT * FROM text;

INSERT INTO bookAdoption
VALUES 
(510,5,'978-0321992475'),
(553,5,'978-1492042529'),
(512,5,'978-0128104057'),
(507,5,'978-0471352090'),
(509,5,'978-1491941597'),
(515,5,'978-1118554562'),
(508,5,'978-1107028610');

-- credit column added to course table
ALTER TABLE course
ADD COLUMN credit INT;

UPDATE course
SET credit=4
WHERE courseId=507;

UPDATE course
SET credit=3
WHERE courseId=508;

UPDATE course
SET credit=3
WHERE courseId=509;

UPDATE course
SET credit=4
WHERE courseId=510;

UPDATE course
SET credit=4
WHERE courseId=512;

UPDATE course
SET credit=3
WHERE courseId=515;

UPDATE course
SET credit=3
WHERE courseId=553;

-- Constraint added to bdate in student table
ALTER TABLE student
ADD CONSTRAINT DOB_Check CHECK (bdate > '2001-12-31');

INSERT INTO student
VALUES 
('01JCE21CS001','Amogh','CSE','2001-10-17');

INSERT INTO student
VALUES 
('01JCE21CS001','Amogh','CSE','2003-10-17');

ALTER TABLE student
DROP CONSTRAINT DOB_Check;

SELECT courseId,cname,dept,credit,author 
FROM course
JOIN bookAdoption
USING (courseId)
JOIN text
USING (bookISBN)
ORDER BY courseId;

SELECT courseId,COUNT(*)
FROM enroll
GROUP BY courseId;

SELECT regno,COUNT(*)
FROM enroll
GROUP BY regno;

SELECT * 
FROM student 
JOIN enroll
USING(regno);

SELECT * 
FROM student
WHERE regno NOT IN(
	SELECT DISTINCT regno
    FROM enroll);

SELECT regno,name,MAX(marks),cname
FROM enroll 
JOIN student
USING(regno)
JOIN course
USING(courseId)
GROUP BY regno;

SELECT regno,name,MAX(marks)
FROM enroll
JOIN student 
USING(regno)
GROUP BY regno;

UPDATE student
SET regno='01JCE21CS002'
WHERE regno='01JCE21CS007';

UPDATE course
SET courseId=550
WHERE courseId=553;


-- Queries

-- 1>Produce a list of textbooks in alphabetic order for the courses offered by CS department 
SELECT * 
FROM text AS T
JOIN bookadoption  AS BT USING(bookISBN)
JOIN course AS C USING (courseId)
WHERE C.dept ='CSE';

-- 2>Student with maximum marks in each subject //not complete to be updated
SELECT C.cname,MAX(E.marks)
FROM student AS S
JOIN enroll AS E USING (regno)
JOIN  course AS C USING (courseId)
GROUP BY C.cname;


-- 3>Number of students in each course
SELECT cname,COUNT(*)
FROM course
JOIN enroll USING(courseId)
GROUP BY cname;


-- 4>Avereage marks scored by students in each subject 
SELECT C.cname,AVG(E.marks)
FROM student AS S
JOIN enroll AS E USING (regno)
JOIN  course AS C USING (courseId)
GROUP BY C.cname;


-- 5>Select details of all students born in 2003
SELECT * 
FROM student
WHERE bdate LIKE '%2003%';

-- 6>Select courses with course ID between 510 and 550
SELECT * 
FROM course
WHERE courseId BETWEEN 510 AND 550;

-- 7>List the total number of books by each publisher
SELECT publisher,COUNT(*)
FROM text
GROUP BY publisher
ORDER BY publisher;

-- 8>List all the authors who write books for CSE students along with the book title
SELECT bookTitle,Author
FROM text 
JOIN bookadoption USING(bookISBN)
JOIN course USING (courseId)
WHERE dept='CSE';

-- 9>List all the book that are not used for any course
SELECT * 
FROM text
WHERE bookISBN NOT IN (
	SELECT bookISBN	
	FROM bookadoption);

-- 10>
